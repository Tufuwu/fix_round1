name: CI

on:
  push:
    tags:
      - '*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        if: matrix.os == 'ubuntu-latest'
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Python 3.8 on macOS
        if: matrix.os == 'macos-latest' && matrix.python-version == '3.8'
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Set up Python 3.8.0 on Windows
        if: matrix.os == 'windows-latest' && matrix.python-version == '3.8'
        run: |
          choco install python --version 3.8.0
          python -m pip install --upgrade pip
        env:
          PATH: C:\Python38;C:\Python38\Scripts;${{ env.PATH }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip pyinstaller wheel
          pip install -r requirements.txt .

      - name: Run script
        run: |
          cd pyinstaller && ./bundle.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: deploy
          path: deploy/*

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: deploy

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: deploy/*
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NAME: ${{ github.ref_name }} (DRAFT)
